(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{360:function(t,e,o){"use strict";o.r(e);var r=o(42),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"react-redex-connect的简单实现"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#react-redex-connect的简单实现"}},[t._v("#")]),t._v(" react-redex - connect的简单实现")]),t._v(" "),o("p",[o("font",{attrs:{color:"#3eaf7c"}},[t._v("connect")]),t._v(" 是react-redux最核心的API，看名字就应该知道它的作用了。是的，它就是链接react和redux之间的桥梁，真正将redux的store注册为组件的props的方法。")],1),t._v(" "),o("p",[t._v("connect(mapStateToProps, mapDispatchToProps, mergeOptions, options) 参数：")]),t._v(" "),o("ul",[o("li",[o("p",[t._v("mapStatwToProps:")]),t._v(" "),o("ol",[o("li",[t._v("必须是Function类型的，作用就是绑定 "),o("font",{attrs:{color:"#3eaf7c"}},[t._v("state")]),t._v(" 的指定值到组件的props中\n"),o("ul",[o("li",[o("font",{attrs:{color:"#3eaf7c"}},[t._v("state")]),t._v(": 监听Redux store的变化。任何时候只要 Redux store发生改变，mapStateToProps 函数就会被调用,该回调函数必须返回一个纯对象，该对象会与相应展示组件的 props 合并")],1)])],1)])]),t._v(" "),o("li",[o("p",[t._v("mapDispatchToProps：\n1.")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);